Create Date: 2016-10-04
Name: Rui Chang
Clemson Email Address: rchang@g.clemson.edu
Course Number:8270

Project No: 3
Project Name: Evaluation and Visualization of an Expression Tree
Project Due Date: 2016-10-08

Compile: make
Run: ./run
Generate Graph: dot -Tpng graph.gv -o graph.png
Test: ./test.py

Project Description:
	Use Flex & Bison to generate calulater and build abstract syntax tree.
	1. Change factored grammar to set operator precedence in bison spec.
	2. Modify scanner to return enum tokens, generated by bison.
	3. Extend astCalc to include additional operations of the form:
	  {x + y, x - y. x * y, x / y, x ** e, (x), -x}; 
	  which are addition, substraction, multiplication, division, exponentiation, parenthese,
	  and unary minus, respectively.
        4. Extend astCalc so that it uses dot to build a graphical representation of the expression tree.
	   Shown in graph.gv and graph.png.
	5. Extend the test cases contained in the directory cases to adequately test the project.
	Extra: For ast.h and ast.cpp , change them to objected oriented implementation.

